version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"  # Enable dashboard for local dev
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - net
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - net
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  db:
    image: ankane/pgvector
    ports:
      - "5433:5432"  # Expose PostgreSQL port to host
    volumes:
      - postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"
    command: >
      bash -c "
        docker-entrypoint.sh postgres &
        sleep 10
        psql -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-postgres} -c 'CREATE EXTENSION IF NOT EXISTS vector;'
        wait
      "

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_HOST=queue
      - REDIS_PORT=6379
    networks:
      - net
    deploy:
      replicas: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${API_DOMAIN}`)"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

  background:
    build:
      context: ./backend
      dockerfile: Dockerfile.background
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - net
    deploy:
      replicas: 2
    restart: always

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - api
    networks:
      - net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${WEB_DOMAIN}`)"
      - "traefik.http.services.web.loadbalancer.server.port=3001"
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"

volumes:
  postgres_db:
  redis_data:

networks:
  net:
    driver: bridge