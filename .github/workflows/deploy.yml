name: Deploy and Push to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SERVICES: app,background,web

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push images
      env:
        SERVICES_TO_BUILD: ${{ env.SERVICES }}
      run: |
        # Check if docker-compose.yml exists
        if [ ! -f "docker-compose.yml" ]; then
          echo "Error: docker-compose.yml not found"
          exit 1
        fi

        echo "Services to build: $SERVICES_TO_BUILD"

        # Split the SERVICES_TO_BUILD environment variable into an array
        IFS=',' read -ra services <<< "$SERVICES_TO_BUILD"
        
        for service in "${services[@]}"
        do
          echo "Processing service: $service"

          # Get the build context and Dockerfile path from docker-compose.yml
          context=$(docker-compose config | yq e ".services.$service.build.context" -)
          dockerfile=$(docker-compose config | yq e ".services.$service.build.dockerfile" -)
          
          # If context or dockerfile is null, use default values
          context=${context:-"./$service"}
          dockerfile=${dockerfile:-"$context/Dockerfile"}
          
          echo "Building and pushing $service"
          echo "Context: $context"
          echo "Dockerfile: $dockerfile"

          # Build and push the image
          docker buildx build \
            --context $context \
            --file $dockerfile \
            --push \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$service:latest \
            .

          echo "Finished building and pushing $service"
        done

        echo "All services processed"

    # - name: Deploy to VM
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USER }}
    #     key: ${{ secrets.SSH_KEY }}
    #     script: |
    #       # Log in to GHCR using GITHUB_TOKEN
    #       echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
    #       # Pull the latest images
    #       docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest
    #       docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
    #       docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/background:latest
          
    #       # Stop and remove existing containers (if any)
    #       docker-compose down
          
    #       # Start the new containers
    #       docker-compose up -d


